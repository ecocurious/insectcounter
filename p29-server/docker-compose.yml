version: '2'
# docker-compose up -d --no-deps --build web
# to rebuild only web
services:
    db:
        image: "postgres"
        volumes:
            - postgres-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        ports:
            - "54320:5432"
    web:
        build: .
        command: sh -c "npm install && node add_scripts/setup_db.js createAllTables && node add_scripts/set_up_gost.js && npm start"
        network_mode: "host"
        depends_on:
            - db
            - dashboard
        environment:
            NODE_ENV: ${NODE_ENV}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_HOST: ${POSTGRES_HOST}
            WEB_URI: ${WEB_URI}
            JWT_SECRET_SENSOR: ${JWT_SECRET_SENSOR}
            JWT_SECRET_USER: ${JWT_SECRET_USER}
            SECURE_TOKEN: ${SECURE_TOKEN}
            GOST_USER: ${GOST_USER}
            GOST_PASSWORD: ${GOST_PASSWORD}
            LANGU: ${LANGU}
            GOST_URI: ${GOST_URI}
            GOST_EXTERNAL_URI: ${GOST_EXTERNAL_URI}

    gost-db:
        image: geodan/rpi-gost-db
        volumes:
            - postgis:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: gost
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
    gost:
        image: geodan/rpi-gost
        volumes:
            - gost_conf:/gostserver/config
        depends_on:
            - gost-db
        environment:
            GOST_DB_HOST: gost-db
            GOST_SERVER_EXTERNAL_URI: ${GOST_EXTERNAL_URI}
            GOST_SERVER_MAX_ENTITIES: 500
    dashboard:
        image: geodan/rpi-gost-dashboard
        ports:
            - "8080:8080"
        depends_on:
            - gost

volumes:
    postgis: {}
    gost_conf: {}
    postgres-data: {}
